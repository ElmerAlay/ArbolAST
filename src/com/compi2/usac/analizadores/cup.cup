package com.compi2.usac.analizadores; 

import java_cup.runtime.*;

parser code 
{:
    // Método al que se llama automáticamente ante algún error sintactico.
    public void syntax_error(Symbol s){ 
            System.err.println("Error Sintáctico en la Línea " + (s.left) +" Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    }
 
    // Método al que se llama en el momento en que ya no es posible una recuperación de errores. 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
            System.err.println("Error síntactico irrecuperable en la Línea " + (s.left)+ " Columna "+s.right+". Componente " + s.value + " no reconocido."); 
    }  
:} 

terminal String equals, entero, id, number;
terminal String plus, minus, by, divided;
terminal String semiColon, colon;

non terminal INICIO, DEC, OP, VALOR, T;

precedence left plus, minus;
precedence left by, divided; 

start with INICIO; 

INICIO  ::= INICIO DEC
        |   DEC             {: System.out.println("Bien"); :}
;

VALOR ::=   id:a        {::}
        |   number      {::}
;

OP  ::=  OP plus OP      {::}
    |    OP minus OP     {::}
    |    OP by OP        {::}
    |    OP divided OP   {::}
    |    minus OP        {::}
    |    VALOR           {::}   
;

T   ::= id      {::}
    |   ASIG    {::}

LID         ::= LID colon T {::}
            |   T           {::}
;

ASIG    ::= id equals OP   {::}
;

DEC         ::= TIPO LID semicolon  {::}
            |   error semicolon     {::}
;